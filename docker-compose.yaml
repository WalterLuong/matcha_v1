version: "3"
services:

  postgres:
    container_name: matcha_database
    image: postgres:latest
    ports:
      - "${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /data/postgres
    networks:
      - postgres
    volumes:
      - postgres:/var/lib/posgresql/data
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin

    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped

  api-service:
    container_name: matcha_backend
    build: ./backend/
    depends_on:
      - postgres
    volumes:
      - ./backend/src/:/usr/src/api/
    ports:
      - "${BACKEND_PORT:-5000}:${BACKEND_PORT:-5000}"
    stop_signal: SIGINT
    environment:
      PORT: ${BACKEND_PORT:-5000}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      SECRET_KEY: ${SECRET_KEY}
      DATABASE_URL: ${DATABASE_URL}
      FLASK_DEBUG: 1
      FLASK_APP: app
    networks:
      - postgres
      - api_network
    restart: unless-stopped

  matcha_client:
    container_name: matcha_frontend
    build: ./frontend/
    restart: unless-stopped
    depends_on:
      - redis
    environment:
      FRONT_PORT: ${FRONTEND_PORT:-3000}
      BACK_PORT: ${BACKEND_PORT:-5000}
      VITE_API: ${API_URL}
    # command: "tail -f"
    ports:
      - "${FRONTEND_PORT:-3000}:${FRONTEND_PORT:-3000}"
    networks:
      - api_network
    volumes:
      - ./frontend:/home/node/app
      - /home/node/app/node_modules

  redis:
    image: "redis:alpine"
    hostname: redis
    ports:
      - "${REDIS_PORT:-6378}:${REDIS_PORT:-6378}"

networks:
  postgres:
    driver: bridge
  api_network:
    driver: bridge

volumes:
    postgres:
    pgadmin: